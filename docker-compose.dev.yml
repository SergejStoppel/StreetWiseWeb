services:
  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "${PORT:-3005}:3005"
    environment:
      - NODE_ENV=development
      - PORT=3005
    env_file:
      - .env
    volumes:
      - ./backend/src:/app/src
      - ./backend/package.json:/app/package.json
      - ./backend/tsconfig.json:/app/tsconfig.json
      - /app/node_modules
    depends_on:
      - redis
    networks:
      - sitecraft-network
    command: npm run dev
    restart: unless-stopped

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - REACT_APP_API_URL=http://localhost:3005
      - REACT_APP_ENV=development
      - REACT_APP_SUPABASE_URL=${DEV_SUPABASE_URL}
      - REACT_APP_SUPABASE_ANON_KEY=${DEV_SUPABASE_ANON_KEY}
      - NODE_OPTIONS=--max-old-space-size=4096
    env_file:
      - .env
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - sitecraft-network
    command: npm start
    restart: unless-stopped

  # Redis for job queues
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    networks:
      - sitecraft-network
    restart: unless-stopped

networks:
  sitecraft-network:
    driver: bridge

volumes:
  redis-data: